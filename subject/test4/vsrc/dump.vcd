$version Generated by VerilatedVcd $end
$timescale 1s $end

 $scope module TOP $end
  $var wire  1 . sub_add $end
  $scope module test $end
   $var wire  1 + c $end
   $var wire  1 0 carry $end
   $var wire 32 , i [31:0] $end
   $var wire 32 # inputa [31:0] $end
   $var wire  4 $ inputa0 [3:0] $end
   $var wire 32 & inputb [31:0] $end
   $var wire  4 % inputb0 [3:0] $end
   $var wire 32 - j [31:0] $end
   $var wire 32 ( k [31:0] $end
   $var wire  1 ) of $end
   $var wire  4 / outputs [3:0] $end
   $var wire  1 2 overflow $end
   $var wire  1 . sub_add $end
   $var wire  4 ' t [3:0] $end
   $var wire  1 * z $end
   $var wire  1 1 zero $end
   $scope module top0 $end
    $var wire  4 $ a [3:0] $end
    $var wire  4 % b [3:0] $end
    $var wire  1 0 carry $end
    $var wire  1 2 overflow $end
    $var wire  4 / result [3:0] $end
    $var wire  1 . sub_add $end
    $var wire  4 3 t_add_cin [3:0] $end
    $var wire  1 1 zero $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
b00000000000000000000000000000000 #
b0000 $
b0000 %
b00000000000000000000000000000000 &
b0000 '
b00000000000000000000000000000000 (
1)
1*
0+
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
0.
b0000 /
00
11
02
b0000 3
#2
b0001 %
b00000000000000000000000000000001 &
b0001 '
b00000000000000000000000000000001 (
0*
b00000000000000000000000000000001 -
b0001 /
01
b0001 3
#3
b0010 %
b00000000000000000000000000000010 &
b0010 '
b00000000000000000000000000000010 (
b00000000000000000000000000000010 -
b0010 /
b0010 3
#4
b0011 %
b00000000000000000000000000000011 &
b0011 '
b00000000000000000000000000000011 (
b00000000000000000000000000000011 -
b0011 /
b0011 3
#5
b00000000000000000000000000000001 #
b0001 $
b0000 %
b00000000000000000000000000000000 &
b0001 '
b00000000000000000000000000000001 (
b00000000000000000000000000000001 ,
b00000000000000000000000000000100 -
b0001 /
b0000 3
