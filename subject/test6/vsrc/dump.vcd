$version Generated by VerilatedVcd $end
$timescale 1s $end

 $scope module TOP $end
  $var wire  8 4 out [7:0] $end
  $var wire  4 3 outaddr [3:0] $end
  $scope module top $end
   $var wire  8 4 out [7:0] $end
   $var wire  4 3 outaddr [3:0] $end
   $var wire  8 # ram[0] [7:0] $end
   $var wire  8 - ram[10] [7:0] $end
   $var wire  8 . ram[11] [7:0] $end
   $var wire  8 / ram[12] [7:0] $end
   $var wire  8 0 ram[13] [7:0] $end
   $var wire  8 1 ram[14] [7:0] $end
   $var wire  8 2 ram[15] [7:0] $end
   $var wire  8 $ ram[1] [7:0] $end
   $var wire  8 % ram[2] [7:0] $end
   $var wire  8 & ram[3] [7:0] $end
   $var wire  8 ' ram[4] [7:0] $end
   $var wire  8 ( ram[5] [7:0] $end
   $var wire  8 ) ram[6] [7:0] $end
   $var wire  8 * ram[7] [7:0] $end
   $var wire  8 + ram[8] [7:0] $end
   $var wire  8 , ram[9] [7:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
b00000000 #
b00000001 $
b00000010 %
b00000011 &
b00000100 '
b00000101 (
b00000110 )
b00000111 *
b00001000 +
b00001001 ,
b00001010 -
b00001011 .
b00001100 /
b00001101 0
b00001110 1
b00001111 2
b0000 3
b00000000 4
#2
b0001 3
b00000001 4
#3
b0010 3
b00000010 4
#4
b0011 3
b00000011 4
#5
b0100 3
b00000100 4
#6
b0101 3
b00000101 4
#7
b0110 3
b00000110 4
#8
b0111 3
b00000111 4
#9
b1000 3
b00001000 4
#10
b1001 3
b00001001 4
#11
b1010 3
b00001010 4
#12
b1011 3
b00001011 4
#13
b1100 3
b00001100 4
#14
b1101 3
b00001101 4
#15
b1110 3
b00001110 4
#16
b1111 3
b00001111 4
#17
